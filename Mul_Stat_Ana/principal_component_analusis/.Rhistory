data = read.table("clipboard", header = T)
data
plot(data)
data = read.table("clipboard", header = T)
data
plot(data)
data = read.table("clipboard", header = T)
plot(data)
data = read.table("clipboard", header = T)
plot(data)
install.packages("RODBC")
install.packages("aplpack")
install.packages("mvstats")
data(idis)
data(iris)
iris
attach(iris)
names(iris)
iris
library(MASS)
iris.lda = lda(Species~Sepal.Length + Sepal.Width + Petal.Length + Petal.Width)
iris.lda
iris.pred = predict(iris.lda) $ class
table(iris.pred, Species)
detach(iris)
View(iris)
q()
d6.1 = read.table("clipboard", header = T)
attach(d6.1)
d6.1
plot(x1,x2)
plot(x1,x2); text(x1, x2, G, adj = -0.5)
library(MASS)
(ld = lda(G~x1+x2))
Z = predict(ld)
newG = Z$class
cbind(G,Z$x,newG)
(tab = table(G, newG))
e6.1 = read.table("clipboard", header = T)
attach(e6.1)
View(`e6.1`)
plot(x1,x2);text(x1,x2,G,adj = -0.8)
plot(x1,x2);text(x1,x2,G)
plot(x1,x2);text(x1,x2,G, adj = -0.4)
library(MASS)
(ld = lda(G~x1+x2))
fix(ld)
ld
predict(131,2)
predict(131,-2)
predict(x1 = 131,x2 = -2)
?predict
fix(ld)
predict(c(x1 = 131,x2 = -2)
)
predict(c(x1 = 131,x2 = -2))
predict(c(131,-2))
predict(ld,data.frame(x1 = 131,x2 = -2))
predict(ld,data.frame(131,-2))
predict(ld,data.frame(x1=131,x2=-2))
predict(data.frame(x1=131,x2=-2))
predict(ld,data.frame(x1=131,x2=-2))
summary(ld)
predict(ld,data.frame(x1=131,x2=-2))
pre = predict(ld,data.frame(x1=131,x2=-2))
e6.1 = read.table("clipboard", header = T)
attach(e6.1)
plot(x1,x2); text(x1,x2,G,adj = -0.4)
(ld= lda(G~x1+x2))
library(MASS)
(ld= lda(G~x1+x2))
Z = predict(ld)
Z
Z = predict(ld,data.frame(x1=131,x2=-2))
Z
install.packages("knitr")
setwd("E:/Program/R")
sessionInfo()
install.packages("knitr")
localeToCharset()
x1 = matrix(rnorm(1000, mean = 0, sd = 0.3), nol = 10) #生成1000个均值为0，标准差为0.3的100 x 10的正态随机矩阵。
x1 = matrix(rnorm(1000, mean = 0, sd = 0.3), ncol = 10) #生成1000个均值为0，标准差为0.3的100 x 10的正态随机矩阵。
View(`x1`)
x2 = matrix(rnorm(1000, mean = 0, sd = 0.3), ncol = 10) #生成1000个均值为1，标准差为0.3的10列100行的正态随机矩阵。
View(`x2`)
x2 = matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 10) #生成1000个均值为1，标准差为0.3的10列100行的正态随机矩阵。
View(`x2`)
x = rbind(x1,x2)
View(x)
plot(hclust(d,method = "complete")) #用最长距离法进行聚类
plot(hclust(x,method = "complete")) #用最长距离法进行聚类
```
x1 = matrix(rnorm(1000, mean = 0, sd = 0.3), ncol = 10) #生成1000个均值为0，标准差为0.3的10列100行的正态随机矩阵。
x2 = matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 10) #生成1000个均值为1，标准差为0.3的10列100行的正态随机矩阵。
x = rbind(x1,x2) #将x1和x2拼接起来
plot(hclust(dist(x),method = "complete")) #用最长距离法进行聚类
c1 = kmeans(x,2)
fix(`c1`)
c1
plot(x)
pch1 = rep("1",1000)
fix(pch1)
plot(x, col = cl$cluster, pch = c(pch1, pch2), cex = 0.4)
pch2 = rep("2",1000)
plot(x, col = cl$cluster, pch = c(pch1, pch2), cex = 0.4)
(cl = kmeans(x,2)) #用Kmeans聚类法进行聚类
plot(x, col = cl$cluster, pch = c(pch1, pch2), cex = 0.4)
points(cl$centers, col = 3, pch = "*", cex = 3)
X = read.table("d7.2.txt", header = T) #导入数据
setwd("E:/Program/R/Mul_Stat_Ana/principal_component_analusis")
X = read.table("d7.2.txt", header = T) #导入数据
X #显示数据
cor(X) #计算相关矩阵
PCA = princomp(X, cor = T) #主成分分析
PCA #特征值
PCA$loadings #主成分负荷
#按照累计方差贡献率大于80%的原则，选定两个主成分，其累计方差哈贡献率为80.7%， 本例取 m = 2。从碎石图上面也可以看出m取2比较合适。
screeplot(PCA, type = "lines") #确定主成分
PCA$scores #主成分得分
princomp.rank(PCA,m =2)
